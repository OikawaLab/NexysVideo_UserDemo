
################################################################
# This is a generated script based on design: system
#
# Though there are limitations about the generated script,
# the main purpose of this utility is to make learning
# IP Integrator Tcl commands easier.
################################################################

################################################################
# Check if script is running in correct Vivado version.
################################################################
set scripts_vivado_version 2014.3
set current_vivado_version [version -short]

if { [string first $scripts_vivado_version $current_vivado_version] == -1 } {
   puts ""
   puts "ERROR: This script was generated using Vivado <$scripts_vivado_version> and is being run in <$current_vivado_version> of Vivado. Please run the script in Vivado <$scripts_vivado_version> then open the design in Vivado <$current_vivado_version>. Upgrade the design by running \"Tools => Report => Report IP Status...\", then run write_bd_tcl to create an updated script."

   return 1
}

################################################################
# START
################################################################

# To test this script, run the following commands from Vivado Tcl console:
# source system_script.tcl

# If you do not already have a project created,
# you can create a project using the following command:
#    create_project project_1 myproj -part xc7a200tsbg484-1


# CHANGE DESIGN NAME HERE
set design_name system

# If you do not already have an existing IP Integrator design open,
# you can create a design using the following command:
#    create_bd_design $design_name

# CHECKING IF PROJECT EXISTS
if { [get_projects -quiet] eq "" } {
   puts "ERROR: Please open or create a project!"
   return 1
}


# Creating design if needed
set errMsg ""
set nRet 0

set cur_design [current_bd_design -quiet]
set list_cells [get_bd_cells -quiet]

if { ${design_name} eq "" } {
   # USE CASES:
   #    1) Design_name not set

   set errMsg "ERROR: Please set the variable <design_name> to a non-empty value."
   set nRet 1

} elseif { ${cur_design} ne "" && ${list_cells} eq "" } {
   # USE CASES:
   #    2): Current design opened AND is empty AND names same.
   #    3): Current design opened AND is empty AND names diff; design_name NOT in project.
   #    4): Current design opened AND is empty AND names diff; design_name exists in project.

   if { $cur_design ne $design_name } {
      puts "INFO: Changing value of <design_name> from <$design_name> to <$cur_design> since current design is empty."
      set design_name [get_property NAME $cur_design]
   }
   puts "INFO: Constructing design in IPI design <$cur_design>..."

} elseif { ${cur_design} ne "" && $list_cells ne "" && $cur_design eq $design_name } {
   # USE CASES:
   #    5) Current design opened AND has components AND same names.

   set errMsg "ERROR: Design <$design_name> already exists in your project, please set the variable <design_name> to another value."
   set nRet 1
} elseif { [get_files -quiet ${design_name}.bd] ne "" } {
   # USE CASES: 
   #    6) Current opened design, has components, but diff names, design_name exists in project.
   #    7) No opened design, design_name exists in project.

   set errMsg "ERROR: Design <$design_name> already exists in your project, please set the variable <design_name> to another value."
   set nRet 2

} else {
   # USE CASES:
   #    8) No opened design, design_name not in project.
   #    9) Current opened design, has components, but diff names, design_name not in project.

   puts "INFO: Currently there is no design <$design_name> in project, so creating one..."

   create_bd_design $design_name

   puts "INFO: Making design <$design_name> as current_bd_design."
   current_bd_design $design_name

}

puts "INFO: Currently the variable <design_name> is equal to \"$design_name\"."

if { $nRet != 0 } {
   puts $errMsg
   return $nRet
}


##################################################################
# MIG PRJ FILE TCL PROCs
##################################################################

proc write_mig_file_system_mig_7series_0_0 { str_mig_prj_filepath } {

   set mig_prj_file [open $str_mig_prj_filepath  w+]

   puts $mig_prj_file {<?xml version='1.0' encoding='UTF-8'?>}
   puts $mig_prj_file {<!-- IMPORTANT: This is an internal file that has been generated by the MIG software. Any direct editing or changes made to this file may result in unpredictable behavior or data corruption. It is strongly advised that users do not edit the contents of this file. Re-run the MIG GUI with the required settings if any of the options provided below need to be altered. -->}
   puts $mig_prj_file {<Project NoOfControllers="1" >}
   puts $mig_prj_file {    <ModuleName>system_mig_7series_0_0</ModuleName>}
   puts $mig_prj_file {    <dci_inouts_inputs>1</dci_inouts_inputs>}
   puts $mig_prj_file {    <dci_inputs>1</dci_inputs>}
   puts $mig_prj_file {    <Debug_En>OFF</Debug_En>}
   puts $mig_prj_file {    <DataDepth_En>1024</DataDepth_En>}
   puts $mig_prj_file {    <LowPower_En>ON</LowPower_En>}
   puts $mig_prj_file {    <XADC_En>Disabled</XADC_En>}
   puts $mig_prj_file {    <TargetFPGA>xc7a200t-sbg484/-1</TargetFPGA>}
   puts $mig_prj_file {    <Version>2.2</Version>}
   puts $mig_prj_file {    <SystemClock>Single-Ended</SystemClock>}
   puts $mig_prj_file {    <ReferenceClock>No Buffer</ReferenceClock>}
   puts $mig_prj_file {    <SysResetPolarity>ACTIVE HIGH</SysResetPolarity>}
   puts $mig_prj_file {    <BankSelectionFlag>FALSE</BankSelectionFlag>}
   puts $mig_prj_file {    <InternalVref>1</InternalVref>}
   puts $mig_prj_file {    <dci_hr_inouts_inputs>50 Ohms</dci_hr_inouts_inputs>}
   puts $mig_prj_file {    <dci_cascade>0</dci_cascade>}
   puts $mig_prj_file {    <Controller number="0" >}
   puts $mig_prj_file {        <MemoryDevice>DDR3_SDRAM/Components/MT41K256M16XX-125</MemoryDevice>}
   puts $mig_prj_file {        <TimePeriod>2500</TimePeriod>}
   puts $mig_prj_file {        <VccAuxIO>1.8V</VccAuxIO>}
   puts $mig_prj_file {        <PHYRatio>4:1</PHYRatio>}
   puts $mig_prj_file {        <InputClkFreq>100</InputClkFreq>}
   puts $mig_prj_file {        <UIExtraClocks>1</UIExtraClocks>}
   puts $mig_prj_file {        <MMCMClkOut0> 7.375</MMCMClkOut0>}
   puts $mig_prj_file {        <MMCMClkOut1>4</MMCMClkOut1>}
   puts $mig_prj_file {        <MMCMClkOut2>1</MMCMClkOut2>}
   puts $mig_prj_file {        <MMCMClkOut3>1</MMCMClkOut3>}
   puts $mig_prj_file {        <MMCMClkOut4>1</MMCMClkOut4>}
   puts $mig_prj_file {        <DataWidth>16</DataWidth>}
   puts $mig_prj_file {        <DeepMemory>1</DeepMemory>}
   puts $mig_prj_file {        <DataMask>1</DataMask>}
   puts $mig_prj_file {        <ECC>Disabled</ECC>}
   puts $mig_prj_file {        <Ordering>Normal</Ordering>}
   puts $mig_prj_file {        <CustomPart>FALSE</CustomPart>}
   puts $mig_prj_file {        <NewPartName></NewPartName>}
   puts $mig_prj_file {        <RowAddress>15</RowAddress>}
   puts $mig_prj_file {        <ColAddress>10</ColAddress>}
   puts $mig_prj_file {        <BankAddress>3</BankAddress>}
   puts $mig_prj_file {        <MemoryVoltage>1.5V</MemoryVoltage>}
   puts $mig_prj_file {        <C0_MEM_SIZE>536870912</C0_MEM_SIZE>}
   puts $mig_prj_file {        <UserMemoryAddressMap>BANK_ROW_COLUMN</UserMemoryAddressMap>}
   puts $mig_prj_file {        <PinSelection>}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="M2" SLEW="" name="ddr3_addr[0]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="L5" SLEW="" name="ddr3_addr[10]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="N5" SLEW="" name="ddr3_addr[11]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="N4" SLEW="" name="ddr3_addr[12]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="P2" SLEW="" name="ddr3_addr[13]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="P6" SLEW="" name="ddr3_addr[14]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="M5" SLEW="" name="ddr3_addr[1]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="M3" SLEW="" name="ddr3_addr[2]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="M1" SLEW="" name="ddr3_addr[3]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="L6" SLEW="" name="ddr3_addr[4]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="P1" SLEW="" name="ddr3_addr[5]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="N3" SLEW="" name="ddr3_addr[6]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="N2" SLEW="" name="ddr3_addr[7]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="M6" SLEW="" name="ddr3_addr[8]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="R1" SLEW="" name="ddr3_addr[9]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="L3" SLEW="" name="ddr3_ba[0]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="K6" SLEW="" name="ddr3_ba[1]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="L4" SLEW="" name="ddr3_ba[2]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="K3" SLEW="" name="ddr3_cas_n" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="DIFF_SSTL15" PADName="P4" SLEW="" name="ddr3_ck_n[0]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="DIFF_SSTL15" PADName="P5" SLEW="" name="ddr3_ck_p[0]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="J6" SLEW="" name="ddr3_cke[0]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="G3" SLEW="" name="ddr3_dm[0]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="F1" SLEW="" name="ddr3_dm[1]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="G2" SLEW="" name="ddr3_dq[0]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="F3" SLEW="" name="ddr3_dq[10]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="D2" SLEW="" name="ddr3_dq[11]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="C2" SLEW="" name="ddr3_dq[12]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="A1" SLEW="" name="ddr3_dq[13]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="E2" SLEW="" name="ddr3_dq[14]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="B1" SLEW="" name="ddr3_dq[15]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="H4" SLEW="" name="ddr3_dq[1]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="H5" SLEW="" name="ddr3_dq[2]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="J1" SLEW="" name="ddr3_dq[3]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="K1" SLEW="" name="ddr3_dq[4]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="H3" SLEW="" name="ddr3_dq[5]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="H2" SLEW="" name="ddr3_dq[6]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="J5" SLEW="" name="ddr3_dq[7]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="E3" SLEW="" name="ddr3_dq[8]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="B2" SLEW="" name="ddr3_dq[9]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="DIFF_SSTL15" PADName="J2" SLEW="" name="ddr3_dqs_n[0]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="DIFF_SSTL15" PADName="D1" SLEW="" name="ddr3_dqs_n[1]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="DIFF_SSTL15" PADName="K2" SLEW="" name="ddr3_dqs_p[0]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="DIFF_SSTL15" PADName="E1" SLEW="" name="ddr3_dqs_p[1]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="K4" SLEW="" name="ddr3_odt[0]" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="J4" SLEW="" name="ddr3_ras_n" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="LVCMOS15" PADName="G1" SLEW="" name="ddr3_reset_n" IN_TERM="" />}
   puts $mig_prj_file {            <Pin VCCAUX_IO="" IOSTANDARD="SSTL15" PADName="L1" SLEW="" name="ddr3_we_n" IN_TERM="" />}
   puts $mig_prj_file {        </PinSelection>}
   puts $mig_prj_file {        <System_Clock>}
   puts $mig_prj_file {            <Pin PADName="R4(MRCC_P)" Bank="34" name="sys_clk_i" />}
   puts $mig_prj_file {        </System_Clock>}
   puts $mig_prj_file {        <System_Control>}
   puts $mig_prj_file {            <Pin PADName="No connect" Bank="Select Bank" name="sys_rst" />}
   puts $mig_prj_file {            <Pin PADName="No connect" Bank="Select Bank" name="init_calib_complete" />}
   puts $mig_prj_file {            <Pin PADName="No connect" Bank="Select Bank" name="tg_compare_error" />}
   puts $mig_prj_file {        </System_Control>}
   puts $mig_prj_file {        <TimingParameters>}
   puts $mig_prj_file {            <Parameters twtr="7.5" trrd="7.5" trefi="7.8" tfaw="40" trtp="7.5" tcke="5" trfc="260" trp="13.75" tras="35" trcd="13.75" />}
   puts $mig_prj_file {        </TimingParameters>}
   puts $mig_prj_file {        <mrBurstLength name="Burst Length" >8 - Fixed</mrBurstLength>}
   puts $mig_prj_file {        <mrBurstType name="Read Burst Type and Length" >Sequential</mrBurstType>}
   puts $mig_prj_file {        <mrCasLatency name="CAS Latency" >6</mrCasLatency>}
   puts $mig_prj_file {        <mrMode name="Mode" >Normal</mrMode>}
   puts $mig_prj_file {        <mrDllReset name="DLL Reset" >No</mrDllReset>}
   puts $mig_prj_file {        <mrPdMode name="DLL control for precharge PD" >Slow Exit</mrPdMode>}
   puts $mig_prj_file {        <emrDllEnable name="DLL Enable" >Enable</emrDllEnable>}
   puts $mig_prj_file {        <emrOutputDriveStrength name="Output Driver Impedance Control" >RZQ/7</emrOutputDriveStrength>}
   puts $mig_prj_file {        <emrMirrorSelection name="Address Mirroring" >Disable</emrMirrorSelection>}
   puts $mig_prj_file {        <emrCSSelection name="Controller Chip Select Pin" >Disable</emrCSSelection>}
   puts $mig_prj_file {        <emrRTT name="RTT (nominal) - On Die Termination (ODT)" >RZQ/6</emrRTT>}
   puts $mig_prj_file {        <emrPosted name="Additive Latency (AL)" >0</emrPosted>}
   puts $mig_prj_file {        <emrOCD name="Write Leveling Enable" >Disabled</emrOCD>}
   puts $mig_prj_file {        <emrDQS name="TDQS enable" >Enabled</emrDQS>}
   puts $mig_prj_file {        <emrRDQS name="Qoff" >Output Buffer Enabled</emrRDQS>}
   puts $mig_prj_file {        <mr2PartialArraySelfRefresh name="Partial-Array Self Refresh" >Full Array</mr2PartialArraySelfRefresh>}
   puts $mig_prj_file {        <mr2CasWriteLatency name="CAS write latency" >5</mr2CasWriteLatency>}
   puts $mig_prj_file {        <mr2AutoSelfRefresh name="Auto Self Refresh" >Enabled</mr2AutoSelfRefresh>}
   puts $mig_prj_file {        <mr2SelfRefreshTempRange name="High Temparature Self Refresh Rate" >Normal</mr2SelfRefreshTempRange>}
   puts $mig_prj_file {        <mr2RTTWR name="RTT_WR - Dynamic On Die Termination (ODT)" >Dynamic ODT off</mr2RTTWR>}
   puts $mig_prj_file {        <PortInterface>AXI</PortInterface>}
   puts $mig_prj_file {        <AXIParameters>}
   puts $mig_prj_file {            <C0_C_RD_WR_ARB_ALGORITHM>RD_PRI_REG</C0_C_RD_WR_ARB_ALGORITHM>}
   puts $mig_prj_file {            <C0_S_AXI_ADDR_WIDTH>29</C0_S_AXI_ADDR_WIDTH>}
   puts $mig_prj_file {            <C0_S_AXI_DATA_WIDTH>32</C0_S_AXI_DATA_WIDTH>}
   puts $mig_prj_file {            <C0_S_AXI_ID_WIDTH>2</C0_S_AXI_ID_WIDTH>}
   puts $mig_prj_file {            <C0_S_AXI_SUPPORTS_NARROW_BURST>0</C0_S_AXI_SUPPORTS_NARROW_BURST>}
   puts $mig_prj_file {        </AXIParameters>}
   puts $mig_prj_file {    </Controller>}
   puts $mig_prj_file {</Project>}

   close $mig_prj_file
}
# End of write_mig_file_system_mig_7series_0_0()



##################################################################
# DESIGN PROCs
##################################################################


# Hierarchical cell: video
proc create_hier_cell_video { parentCell nameHier } {

  if { $parentCell eq "" || $nameHier eq "" } {
     puts "ERROR: create_hier_cell_video() - Empty argument(s)!"
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     puts "ERROR: Unable to find parent cell <$parentCell>!"
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     puts "ERROR: Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:iic_rtl:1.0 DDC
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 DP_TX_S_AXILITE
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI
  create_bd_intf_pin -mode Slave -vlnv digilentinc.com:interface:tmds_rtl:1.0 TMDS_IN
  create_bd_intf_pin -mode Master -vlnv digilentinc.com:interface:tmds_rtl:1.0 TMDS_OUT
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 ctrl
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 ctrl1
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 ctrl2

  # Create pins
  create_bd_pin -dir I -type rst ARST_N
  create_bd_pin -dir I DP_TX_AUX_IN_N
  create_bd_pin -dir I DP_TX_AUX_IN_P
  create_bd_pin -dir O DP_TX_AUX_OUT_N
  create_bd_pin -dir O DP_TX_AUX_OUT_P
  create_bd_pin -dir I DP_TX_HPD
  create_bd_pin -dir O -from 1 -to 0 DP_TX_LANE_N
  create_bd_pin -dir O -from 1 -to 0 DP_TX_LANE_P
  create_bd_pin -dir I DP_TX_LNK_CLK_N
  create_bd_pin -dir I DP_TX_LNK_CLK_P
  create_bd_pin -dir I -type clk IntPixelClk
  create_bd_pin -dir IO PS2_Clk
  create_bd_pin -dir IO PS2_Data
  create_bd_pin -dir I -type clk REF_CLK_200MHZ
  create_bd_pin -dir I -type clk S_AXI_ACLK
  create_bd_pin -dir I -type rst S_AXI_ARESET_N
  create_bd_pin -dir O -type intr axi_int
  create_bd_pin -dir O -type intr ip2intc_irpt
  create_bd_pin -dir O -type intr irq

  # Create instance: displayport_0, and set properties
  set displayport_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:displayport:5.0 displayport_0 ]
  set_property -dict [ list CONFIG.Dual_Pixel_Enable {false} CONFIG.Max_Bits_Per_Color {8} CONFIG.Number_of_Lanes {2} CONFIG.Protocol_Selection {DP_1_1_A} CONFIG.YCRCB_Enable {false}  ] $displayport_0

  # Create instance: dp_out_sel, and set properties
  set dp_out_sel [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 dp_out_sel ]
  set_property -dict [ list CONFIG.DIN_FROM {1} CONFIG.DIN_TO {1} CONFIG.DIN_WIDTH {2}  ] $dp_out_sel

  # Create instance: dvi2rgb_0, and set properties
  set dvi2rgb_0 [ create_bd_cell -type ip -vlnv digilentinc.com:ip:dvi2rgb:1.4 dvi2rgb_0 ]
  set_property -dict [ list CONFIG.kClkRange {2} CONFIG.kEmulateDDC {true} CONFIG.kEnableSerialClkOutput {false} CONFIG.kRstActiveHigh {false}  ] $dvi2rgb_0

  # Create instance: hdmi_out_sel, and set properties
  set hdmi_out_sel [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 hdmi_out_sel ]
  set_property -dict [ list CONFIG.DIN_WIDTH {2}  ] $hdmi_out_sel

  # Create instance: ps2_mouse_overlay_0, and set properties
  set ps2_mouse_overlay_0 [ create_bd_cell -type ip -vlnv digilentinc.com:ip:ps2_mouse_overlay:1.1 ps2_mouse_overlay_0 ]

  # Create instance: rgb2dpvid_0, and set properties
  set rgb2dpvid_0 [ create_bd_cell -type ip -vlnv digilentinc.com:user:rgb2dpvid:1.0 rgb2dpvid_0 ]

  # Create instance: rgb2dvi_0, and set properties
  set rgb2dvi_0 [ create_bd_cell -type ip -vlnv digilentinc.com:ip:rgb2dvi:1.2 rgb2dvi_0 ]
  set_property -dict [ list CONFIG.kClkPrimitive {PLL} CONFIG.kGenerateSerialClk {true} CONFIG.kRstActiveHigh {false}  ] $rgb2dvi_0

  # Create instance: v_axi4s_vid_out_0, and set properties
  set v_axi4s_vid_out_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:v_axi4s_vid_out:3.0 v_axi4s_vid_out_0 ]
  set_property -dict [ list CONFIG.RAM_ADDR_BITS {5} CONFIG.VTG_MASTER_SLAVE {1}  ] $v_axi4s_vid_out_0

  # Create instance: v_tpg_0, and set properties
  set v_tpg_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:v_tpg:6.0 v_tpg_0 ]
  set_property -dict [ list CONFIG.has_axi4s_slave {false} CONFIG.has_vtiming {false} CONFIG.m_video_format {2} CONFIG.motion_speed {1} CONFIG.pattern_control {14}  ] $v_tpg_0

  # Create instance: vid_io_mux_dp, and set properties
  set vid_io_mux_dp [ create_bd_cell -type ip -vlnv digilentinc.com:ip:vid_io_mux:1.1 vid_io_mux_dp ]

  # Create instance: vid_io_mux_dvi, and set properties
  set vid_io_mux_dvi [ create_bd_cell -type ip -vlnv digilentinc.com:ip:vid_io_mux:1.1 vid_io_mux_dvi ]

  # Create instance: video_path_ctrl, and set properties
  set video_path_ctrl [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 video_path_ctrl ]
  set_property -dict [ list CONFIG.C_ALL_INPUTS {0} CONFIG.C_ALL_OUTPUTS_2 {0} CONFIG.C_GPIO2_WIDTH {2} CONFIG.C_GPIO_WIDTH {3} CONFIG.C_INTERRUPT_PRESENT {1} CONFIG.C_IS_DUAL {1} CONFIG.C_TRI_DEFAULT_2 {0x00000000}  ] $video_path_ctrl

  # Create instance: vtc_locked_bit, and set properties
  set vtc_locked_bit [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 vtc_locked_bit ]
  set_property -dict [ list CONFIG.DIN_FROM {8} CONFIG.DIN_TO {8}  ] $vtc_locked_bit

  # Create instance: vtd, and set properties
  set vtd [ create_bd_cell -type ip -vlnv xilinx.com:ip:v_tc:6.1 vtd ]
  set_property -dict [ list CONFIG.HAS_AXI4_LITE {true} CONFIG.HAS_INTC_IF {true} CONFIG.VIDEO_MODE {1280x1024p} CONFIG.enable_generation {false} CONFIG.horizontal_blank_detection {false} CONFIG.vertical_blank_detection {false}  ] $vtd

  # Create instance: vtg, and set properties
  set vtg [ create_bd_cell -type ip -vlnv xilinx.com:ip:v_tc:6.1 vtg ]
  set_property -dict [ list CONFIG.HAS_AXI4_LITE {false} CONFIG.VIDEO_MODE {1280x1024p} CONFIG.enable_detection {false} CONFIG.horizontal_blank_generation {true} CONFIG.vertical_blank_generation {true}  ] $vtg

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list CONFIG.NUM_PORTS {3}  ] $xlconcat_0

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins ctrl] [get_bd_intf_pins v_tpg_0/ctrl]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins S_AXI] [get_bd_intf_pins video_path_ctrl/S_AXI]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins ctrl1] [get_bd_intf_pins vtd/ctrl]
  connect_bd_intf_net -intf_net Conn4 [get_bd_intf_pins ctrl2] [get_bd_intf_pins ps2_mouse_overlay_0/ctrl]
  connect_bd_intf_net -intf_net TMDS_1 [get_bd_intf_pins TMDS_IN] [get_bd_intf_pins dvi2rgb_0/TMDS]
  connect_bd_intf_net -intf_net dvi2rgb_0_DDC [get_bd_intf_pins DDC] [get_bd_intf_pins dvi2rgb_0/DDC]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M14_AXI [get_bd_intf_pins DP_TX_S_AXILITE] [get_bd_intf_pins displayport_0/dp_s_axilite]
  connect_bd_intf_net -intf_net rgb2dvi_0_TMDS [get_bd_intf_pins TMDS_OUT] [get_bd_intf_pins rgb2dvi_0/TMDS]
  connect_bd_intf_net -intf_net v_tpg_0_video_out [get_bd_intf_pins v_axi4s_vid_out_0/video_in] [get_bd_intf_pins v_tpg_0/video_out]
  connect_bd_intf_net -intf_net vid_io_mux_dp_vid_o_m [get_bd_intf_pins rgb2dpvid_0/InputData] [get_bd_intf_pins vid_io_mux_dp/vid_o_m]
  connect_bd_intf_net -intf_net vid_io_mux_dvi_vid_o_m [get_bd_intf_pins ps2_mouse_overlay_0/vid_i] [get_bd_intf_pins vid_io_mux_dvi/vid_o_m]
  connect_bd_intf_net -intf_net vtg_vtiming_out [get_bd_intf_pins v_axi4s_vid_out_0/vtiming_in] [get_bd_intf_pins vtg/vtiming_out]

  # Create port connections
  connect_bd_net -net Net [get_bd_pins PS2_Clk] [get_bd_pins ps2_mouse_overlay_0/PS2_Clk_IO]
  connect_bd_net -net Net1 [get_bd_pins PS2_Data] [get_bd_pins ps2_mouse_overlay_0/PS2_Data_IO]
  connect_bd_net -net aux_tx_channel_in_n_1 [get_bd_pins DP_TX_AUX_IN_N] [get_bd_pins displayport_0/aux_tx_channel_in_n]
  connect_bd_net -net aux_tx_channel_in_p_1 [get_bd_pins DP_TX_AUX_IN_P] [get_bd_pins displayport_0/aux_tx_channel_in_p]
  connect_bd_net -net clk_1 [get_bd_pins IntPixelClk] [get_bd_pins v_axi4s_vid_out_0/aclk] [get_bd_pins v_axi4s_vid_out_0/vid_io_out_clk] [get_bd_pins v_tpg_0/aclk] [get_bd_pins vid_io_mux_dp/PixelClk_0] [get_bd_pins vid_io_mux_dvi/PixelClk_0] [get_bd_pins vtg/clk]
  connect_bd_net -net displayport_0_aux_tx_channel_out_n [get_bd_pins DP_TX_AUX_OUT_N] [get_bd_pins displayport_0/aux_tx_channel_out_n]
  connect_bd_net -net displayport_0_aux_tx_channel_out_p [get_bd_pins DP_TX_AUX_OUT_P] [get_bd_pins displayport_0/aux_tx_channel_out_p]
  connect_bd_net -net displayport_0_axi_int [get_bd_pins axi_int] [get_bd_pins displayport_0/axi_int]
  connect_bd_net -net displayport_0_lnk_tx_lane_n [get_bd_pins DP_TX_LANE_N] [get_bd_pins displayport_0/lnk_tx_lane_n]
  connect_bd_net -net displayport_0_lnk_tx_lane_p [get_bd_pins DP_TX_LANE_P] [get_bd_pins displayport_0/lnk_tx_lane_p]
  connect_bd_net -net dp_out_sel_Dout [get_bd_pins dp_out_sel/Dout] [get_bd_pins vid_io_mux_dp/aSel]
  connect_bd_net -net dvi2rgb_0_PixelClk [get_bd_pins dvi2rgb_0/PixelClk] [get_bd_pins vid_io_mux_dp/PixelClk_1] [get_bd_pins vid_io_mux_dvi/PixelClk_1] [get_bd_pins vtd/clk]
  connect_bd_net -net dvi2rgb_0_aPixelClkLckd [get_bd_pins dvi2rgb_0/aPixelClkLckd] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net dvi2rgb_0_vid_pData [get_bd_pins dvi2rgb_0/vid_pData] [get_bd_pins vid_io_mux_dp/p1Data] [get_bd_pins vid_io_mux_dvi/p1Data]
  connect_bd_net -net dvi2rgb_0_vid_pHSync [get_bd_pins dvi2rgb_0/vid_pHSync] [get_bd_pins vid_io_mux_dp/p1HSync] [get_bd_pins vid_io_mux_dvi/p1HSync] [get_bd_pins vtd/hsync_in]
  connect_bd_net -net dvi2rgb_0_vid_pVDE [get_bd_pins dvi2rgb_0/vid_pVDE] [get_bd_pins vid_io_mux_dp/p1Vde] [get_bd_pins vid_io_mux_dvi/p1Vde] [get_bd_pins vtd/active_video_in]
  connect_bd_net -net dvi2rgb_0_vid_pVSync [get_bd_pins dvi2rgb_0/vid_pVSync] [get_bd_pins vid_io_mux_dp/p1VSync] [get_bd_pins vid_io_mux_dvi/p1VSync] [get_bd_pins vtd/vsync_in]
  connect_bd_net -net hdmi_out_sel_Dout [get_bd_pins hdmi_out_sel/Dout] [get_bd_pins vid_io_mux_dvi/aSel]
  connect_bd_net -net lnk_clk_n_1 [get_bd_pins DP_TX_LNK_CLK_N] [get_bd_pins displayport_0/lnk_clk_n]
  connect_bd_net -net lnk_clk_p_1 [get_bd_pins DP_TX_LNK_CLK_P] [get_bd_pins displayport_0/lnk_clk_p]
  connect_bd_net -net microblaze_0_Clk [get_bd_pins S_AXI_ACLK] [get_bd_pins displayport_0/s_axi_aclk] [get_bd_pins ps2_mouse_overlay_0/s00_axi_aclk] [get_bd_pins v_tpg_0/s_axi_aclk] [get_bd_pins video_path_ctrl/s_axi_aclk] [get_bd_pins vtd/s_axi_aclk]
  connect_bd_net -net mig_7series_0_mmcm_locked [get_bd_pins ARST_N] [get_bd_pins dvi2rgb_0/aRst_n] [get_bd_pins ps2_mouse_overlay_0/s00_axi_aresetn] [get_bd_pins v_tpg_0/s_axi_aresetn] [get_bd_pins video_path_ctrl/s_axi_aresetn] [get_bd_pins vtd/s_axi_aresetn]
  connect_bd_net -net mig_7series_0_ui_addn_clk_0 [get_bd_pins REF_CLK_200MHZ] [get_bd_pins dvi2rgb_0/RefClk]
  connect_bd_net -net ps2_mouse_overlay_0_pData_out [get_bd_pins ps2_mouse_overlay_0/pData_out] [get_bd_pins rgb2dvi_0/vid_pData]
  connect_bd_net -net rgb2dpvid_0_pVidClk [get_bd_pins displayport_0/tx_vid_clk] [get_bd_pins rgb2dpvid_0/pVidClk]
  connect_bd_net -net rgb2dpvid_0_pVidEnable [get_bd_pins displayport_0/tx_vid_enable] [get_bd_pins rgb2dpvid_0/pVidEnable]
  connect_bd_net -net rgb2dpvid_0_pVidHSync [get_bd_pins displayport_0/tx_vid_hsync] [get_bd_pins rgb2dpvid_0/pVidHSync]
  connect_bd_net -net rgb2dpvid_0_pVidOddEven [get_bd_pins displayport_0/tx_vid_oddeven] [get_bd_pins rgb2dpvid_0/pVidOddEven]
  connect_bd_net -net rgb2dpvid_0_pVidPixel0 [get_bd_pins displayport_0/tx_vid_pixel0] [get_bd_pins rgb2dpvid_0/pVidPixel0]
  connect_bd_net -net rgb2dpvid_0_pVidRst [get_bd_pins displayport_0/tx_vid_rst] [get_bd_pins rgb2dpvid_0/pVidRst]
  connect_bd_net -net rgb2dpvid_0_pVidVSync [get_bd_pins displayport_0/tx_vid_vsync] [get_bd_pins rgb2dpvid_0/pVidVSync]
  connect_bd_net -net rst_mig_7series_0_100M_peripheral_aresetn [get_bd_pins S_AXI_ARESET_N] [get_bd_pins displayport_0/s_axi_aresetn]
  connect_bd_net -net tx_hpd_1 [get_bd_pins DP_TX_HPD] [get_bd_pins displayport_0/tx_hpd]
  connect_bd_net -net v_axi4s_vid_out_0_locked [get_bd_pins v_axi4s_vid_out_0/locked] [get_bd_pins xlconcat_0/In2]
  connect_bd_net -net v_axi4s_vid_out_0_vid_active_video [get_bd_pins ps2_mouse_overlay_0/pVde_out] [get_bd_pins rgb2dvi_0/vid_pVDE]
  connect_bd_net -net v_axi4s_vid_out_0_vid_active_video1 [get_bd_pins v_axi4s_vid_out_0/vid_active_video] [get_bd_pins vid_io_mux_dp/p0Vde] [get_bd_pins vid_io_mux_dvi/p0Vde]
  connect_bd_net -net v_axi4s_vid_out_0_vid_data [get_bd_pins v_axi4s_vid_out_0/vid_data] [get_bd_pins vid_io_mux_dp/p0Data] [get_bd_pins vid_io_mux_dvi/p0Data]
  connect_bd_net -net v_axi4s_vid_out_0_vid_hsync [get_bd_pins ps2_mouse_overlay_0/pHSync_out] [get_bd_pins rgb2dvi_0/vid_pHSync]
  connect_bd_net -net v_axi4s_vid_out_0_vid_hsync1 [get_bd_pins v_axi4s_vid_out_0/vid_hsync] [get_bd_pins vid_io_mux_dp/p0HSync] [get_bd_pins vid_io_mux_dvi/p0HSync]
  connect_bd_net -net v_axi4s_vid_out_0_vid_vsync [get_bd_pins ps2_mouse_overlay_0/pVSync_out] [get_bd_pins rgb2dvi_0/vid_pVSync]
  connect_bd_net -net v_axi4s_vid_out_0_vid_vsync1 [get_bd_pins v_axi4s_vid_out_0/vid_vsync] [get_bd_pins vid_io_mux_dp/p0VSync] [get_bd_pins vid_io_mux_dvi/p0VSync]
  connect_bd_net -net vid_io_mux_dp_PixelClk [get_bd_pins rgb2dpvid_0/PixelClk] [get_bd_pins vid_io_mux_dp/PixelClk]
  connect_bd_net -net vid_io_mux_dvi_PixelClk [get_bd_pins ps2_mouse_overlay_0/PixelClk] [get_bd_pins rgb2dvi_0/PixelClk] [get_bd_pins vid_io_mux_dvi/PixelClk]
  connect_bd_net -net video_path_ctrl_gpio2_io_o [get_bd_pins dp_out_sel/Din] [get_bd_pins hdmi_out_sel/Din] [get_bd_pins video_path_ctrl/gpio2_io_i] [get_bd_pins video_path_ctrl/gpio2_io_o]
  connect_bd_net -net video_path_ctrl_ip2intc_irpt [get_bd_pins ip2intc_irpt] [get_bd_pins video_path_ctrl/ip2intc_irpt]
  connect_bd_net -net vtc_locked_bit_Dout [get_bd_pins vtc_locked_bit/Dout] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net vtd_intc_if [get_bd_pins vtc_locked_bit/Din] [get_bd_pins vtd/intc_if]
  connect_bd_net -net vtd_irq [get_bd_pins irq] [get_bd_pins vtd/irq]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins video_path_ctrl/gpio_io_i] [get_bd_pins xlconcat_0/dout]
  
  # Restore current instance
  current_bd_instance $oldCurInst
}

# Hierarchical cell: oled
proc create_hier_cell_oled { parentCell nameHier } {

  if { $parentCell eq "" || $nameHier eq "" } {
     puts "ERROR: create_hier_cell_oled() - Empty argument(s)!"
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     puts "ERROR: Unable to find parent cell <$parentCell>!"
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     puts "ERROR: Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 AXI_LITE
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI

  # Create pins
  create_bd_pin -dir O -from 3 -to 0 GPIO
  create_bd_pin -dir O io0_o
  create_bd_pin -dir O -type intr ip2intc_irpt
  create_bd_pin -dir I -type clk s_axi_aclk
  create_bd_pin -dir I -type rst s_axi_aresetn
  create_bd_pin -dir O sck_o

  # Create instance: axi_gpio_0, and set properties
  set axi_gpio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_0 ]
  set_property -dict [ list CONFIG.C_ALL_OUTPUTS {0} CONFIG.C_GPIO_WIDTH {4}  ] $axi_gpio_0

  # Create instance: axi_quad_spi_0, and set properties
  set axi_quad_spi_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_quad_spi:3.2 axi_quad_spi_0 ]
  set_property -dict [ list CONFIG.C_FIFO_DEPTH {256} CONFIG.C_SCK_RATIO {16} CONFIG.C_USE_STARTUP {0} CONFIG.FIFO_INCLUDED {1} CONFIG.Multiples16 {6}  ] $axi_quad_spi_0

  # Create interface connections
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins AXI_LITE] [get_bd_intf_pins axi_quad_spi_0/AXI_LITE]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins S_AXI] [get_bd_intf_pins axi_gpio_0/S_AXI]

  # Create port connections
  connect_bd_net -net axi_gpio_0_gpio_io_o [get_bd_pins GPIO] [get_bd_pins axi_gpio_0/gpio_io_i] [get_bd_pins axi_gpio_0/gpio_io_o]
  connect_bd_net -net axi_quad_spi_0_io0_o [get_bd_pins io0_o] [get_bd_pins axi_quad_spi_0/io0_o]
  connect_bd_net -net axi_quad_spi_0_ip2intc_irpt [get_bd_pins ip2intc_irpt] [get_bd_pins axi_quad_spi_0/ip2intc_irpt]
  connect_bd_net -net axi_quad_spi_0_sck_o [get_bd_pins sck_o] [get_bd_pins axi_quad_spi_0/sck_o]
  connect_bd_net -net s_axi_aclk_1 [get_bd_pins s_axi_aclk] [get_bd_pins axi_gpio_0/s_axi_aclk] [get_bd_pins axi_quad_spi_0/ext_spi_clk] [get_bd_pins axi_quad_spi_0/s_axi_aclk]
  connect_bd_net -net s_axi_aresetn_1 [get_bd_pins s_axi_aresetn] [get_bd_pins axi_gpio_0/s_axi_aresetn] [get_bd_pins axi_quad_spi_0/s_axi_aresetn]
  
  # Restore current instance
  current_bd_instance $oldCurInst
}

# Hierarchical cell: microblaze_0_local_memory
proc create_hier_cell_microblaze_0_local_memory { parentCell nameHier } {

  if { $parentCell eq "" || $nameHier eq "" } {
     puts "ERROR: create_hier_cell_microblaze_0_local_memory() - Empty argument(s)!"
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     puts "ERROR: Unable to find parent cell <$parentCell>!"
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     puts "ERROR: Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode MirroredMaster -vlnv xilinx.com:interface:lmb_rtl:1.0 DLMB
  create_bd_intf_pin -mode MirroredMaster -vlnv xilinx.com:interface:lmb_rtl:1.0 ILMB

  # Create pins
  create_bd_pin -dir I -type clk LMB_Clk
  create_bd_pin -dir I -type rst LMB_Rst

  # Create instance: dlmb_bram_if_cntlr, and set properties
  set dlmb_bram_if_cntlr [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_bram_if_cntlr:4.0 dlmb_bram_if_cntlr ]
  set_property -dict [ list CONFIG.C_ECC {0}  ] $dlmb_bram_if_cntlr

  # Create instance: dlmb_v10, and set properties
  set dlmb_v10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_v10:3.0 dlmb_v10 ]

  # Create instance: ilmb_bram_if_cntlr, and set properties
  set ilmb_bram_if_cntlr [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_bram_if_cntlr:4.0 ilmb_bram_if_cntlr ]
  set_property -dict [ list CONFIG.C_ECC {0}  ] $ilmb_bram_if_cntlr

  # Create instance: ilmb_v10, and set properties
  set ilmb_v10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_v10:3.0 ilmb_v10 ]

  # Create instance: lmb_bram, and set properties
  set lmb_bram [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.2 lmb_bram ]
  set_property -dict [ list CONFIG.Memory_Type {True_Dual_Port_RAM} CONFIG.use_bram_block {BRAM_Controller}  ] $lmb_bram

  # Create interface connections
  connect_bd_intf_net -intf_net microblaze_0_dlmb [get_bd_intf_pins DLMB] [get_bd_intf_pins dlmb_v10/LMB_M]
  connect_bd_intf_net -intf_net microblaze_0_dlmb_bus [get_bd_intf_pins dlmb_bram_if_cntlr/SLMB] [get_bd_intf_pins dlmb_v10/LMB_Sl_0]
  connect_bd_intf_net -intf_net microblaze_0_dlmb_cntlr [get_bd_intf_pins dlmb_bram_if_cntlr/BRAM_PORT] [get_bd_intf_pins lmb_bram/BRAM_PORTA]
  connect_bd_intf_net -intf_net microblaze_0_ilmb [get_bd_intf_pins ILMB] [get_bd_intf_pins ilmb_v10/LMB_M]
  connect_bd_intf_net -intf_net microblaze_0_ilmb_bus [get_bd_intf_pins ilmb_bram_if_cntlr/SLMB] [get_bd_intf_pins ilmb_v10/LMB_Sl_0]
  connect_bd_intf_net -intf_net microblaze_0_ilmb_cntlr [get_bd_intf_pins ilmb_bram_if_cntlr/BRAM_PORT] [get_bd_intf_pins lmb_bram/BRAM_PORTB]

  # Create port connections
  connect_bd_net -net microblaze_0_Clk [get_bd_pins LMB_Clk] [get_bd_pins dlmb_bram_if_cntlr/LMB_Clk] [get_bd_pins dlmb_v10/LMB_Clk] [get_bd_pins ilmb_bram_if_cntlr/LMB_Clk] [get_bd_pins ilmb_v10/LMB_Clk]
  connect_bd_net -net microblaze_0_LMB_Rst [get_bd_pins LMB_Rst] [get_bd_pins dlmb_bram_if_cntlr/LMB_Rst] [get_bd_pins dlmb_v10/SYS_Rst] [get_bd_pins ilmb_bram_if_cntlr/LMB_Rst] [get_bd_pins ilmb_v10/SYS_Rst]
  
  # Restore current instance
  current_bd_instance $oldCurInst
}


# Procedure to create entire design; Provide argument to make
# procedure reusable. If parentCell is "", will use root.
proc create_root_design { parentCell } {

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     puts "ERROR: Unable to find parent cell <$parentCell>!"
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     puts "ERROR: Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set DDR3 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddrx_rtl:1.0 DDR3 ]
  set ETH [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:rgmii_rtl:1.0 ETH ]
  set ETHM [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:mdio_io:1.0 ETHM ]
  set gpio_rtl [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 gpio_rtl ]
  set gpio_rtl_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 gpio_rtl_0 ]
  set hdmi_rx [ create_bd_intf_port -mode Slave -vlnv digilentinc.com:interface:tmds_rtl:1.0 hdmi_rx ]
  set hdmi_rx_ddc [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:iic_rtl:1.0 hdmi_rx_ddc ]
  set hdmi_tx [ create_bd_intf_port -mode Master -vlnv digilentinc.com:interface:tmds_rtl:1.0 hdmi_tx ]
  set iic [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:iic_rtl:1.0 iic ]
  set led [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 led ]
  set qspi [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:spi_rtl:1.0 qspi ]
  set sd_cd [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 sd_cd ]
  set sd_cmd [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 sd_cmd ]

  # Create ports
  set AC_ADC_SDATA [ create_bd_port -dir I AC_ADC_SDATA ]
  set AC_BCLK [ create_bd_port -dir O AC_BCLK ]
  set AC_DAC_SDATA [ create_bd_port -dir O AC_DAC_SDATA ]
  set AC_LRCLK [ create_bd_port -dir O AC_LRCLK ]
  set AC_MCLK [ create_bd_port -dir O AC_MCLK ]
  set CPU_RESETN [ create_bd_port -dir I -type rst CPU_RESETN ]
  set DPTI_FTCLK [ create_bd_port -dir I DPTI_FTCLK ]
  set DPTI_JTAGEN [ create_bd_port -dir I DPTI_JTAGEN ]
  set DPTI_OE [ create_bd_port -dir O DPTI_OE ]
  set DPTI_PDB [ create_bd_port -dir IO -from 7 -to 0 DPTI_PDB ]
  set DPTI_RD [ create_bd_port -dir O DPTI_RD ]
  set DPTI_RXF [ create_bd_port -dir I DPTI_RXF ]
  set DPTI_SIWU [ create_bd_port -dir O DPTI_SIWU ]
  set DPTI_TXE [ create_bd_port -dir I DPTI_TXE ]
  set DPTI_WR [ create_bd_port -dir O DPTI_WR ]
  set DP_AUX_IN_N [ create_bd_port -dir I DP_AUX_IN_N ]
  set DP_AUX_IN_P [ create_bd_port -dir I DP_AUX_IN_P ]
  set DP_AUX_OUT_N [ create_bd_port -dir O DP_AUX_OUT_N ]
  set DP_AUX_OUT_P [ create_bd_port -dir O DP_AUX_OUT_P ]
  set DP_HPD [ create_bd_port -dir I DP_HPD ]
  set DP_LNK_CLK_N [ create_bd_port -dir I DP_LNK_CLK_N ]
  set DP_LNK_CLK_P [ create_bd_port -dir I DP_LNK_CLK_P ]
  set DP_TX_LANE_N [ create_bd_port -dir O -from 1 -to 0 DP_TX_LANE_N ]
  set DP_TX_LANE_P [ create_bd_port -dir O -from 1 -to 0 DP_TX_LANE_P ]
  set ETH_INT_B [ create_bd_port -dir I -type intr ETH_INT_B ]
  set_property -dict [ list CONFIG.SENSITIVITY {LEVEL_LOW}  ] $ETH_INT_B
  set ETH_RST_B [ create_bd_port -dir O -type rst ETH_RST_B ]
  set PS2_Clk [ create_bd_port -dir IO PS2_Clk ]
  set PS2_Data [ create_bd_port -dir IO PS2_Data ]
  set SYSCLK [ create_bd_port -dir I -type clk SYSCLK ]
  set UART_RX_OUT [ create_bd_port -dir O UART_RX_OUT ]
  set UART_TX_IN [ create_bd_port -dir I UART_TX_IN ]
  set btnc [ create_bd_port -dir I btnc ]
  set btnd [ create_bd_port -dir I btnd ]
  set btnl [ create_bd_port -dir I btnl ]
  set btnr [ create_bd_port -dir I btnr ]
  set btnu [ create_bd_port -dir I btnu ]
  set hdmi_rx_hpa [ create_bd_port -dir O hdmi_rx_hpa ]
  set hdmi_rx_txen [ create_bd_port -dir O hdmi_rx_txen ]
  set oled_gpio [ create_bd_port -dir O -from 3 -to 0 oled_gpio ]
  set oled_sclk [ create_bd_port -dir O oled_sclk ]
  set oled_sdin [ create_bd_port -dir O oled_sdin ]
  set sd_dat0_i [ create_bd_port -dir I sd_dat0_i ]
  set sd_dat1_i [ create_bd_port -dir I sd_dat1_i ]
  set sd_dat2_i [ create_bd_port -dir I sd_dat2_i ]
  set sd_dat3_i [ create_bd_port -dir I sd_dat3_i ]
  set sd_reset_o [ create_bd_port -dir O -type rst sd_reset_o ]
  set sd_sck_o [ create_bd_port -dir O -type clk sd_sck_o ]
  set sw [ create_bd_port -dir I -from 7 -to 0 sw ]

  # Create instance: axi_dma_0, and set properties
  set axi_dma_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_0 ]
  set_property -dict [ list CONFIG.c_include_sg {0} CONFIG.c_mm2s_burst_size {256} CONFIG.c_s2mm_burst_size {256} CONFIG.c_sg_length_width {23}  ] $axi_dma_0

  # Create instance: axi_ethernet_0, and set properties
  set axi_ethernet_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_ethernet:6.2 axi_ethernet_0 ]
  set_property -dict [ list CONFIG.PHY_TYPE {RGMII} CONFIG.SupportLevel {1}  ] $axi_ethernet_0

  # Create instance: axi_ethernet_0_fifo, and set properties
  set axi_ethernet_0_fifo [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_fifo_mm_s:4.1 axi_ethernet_0_fifo ]
  set_property -dict [ list CONFIG.C_HAS_AXIS_TKEEP {true} CONFIG.C_RX_FIFO_DEPTH {4096} CONFIG.C_RX_FIFO_PE_THRESHOLD {10} CONFIG.C_RX_FIFO_PF_THRESHOLD {4000} CONFIG.C_TX_FIFO_DEPTH {4096} CONFIG.C_TX_FIFO_PE_THRESHOLD {10} CONFIG.C_TX_FIFO_PF_THRESHOLD {4000}  ] $axi_ethernet_0_fifo

  # Create instance: axi_iic_0, and set properties
  set axi_iic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_iic:2.0 axi_iic_0 ]

  # Create instance: axi_mem_intercon, and set properties
  set axi_mem_intercon [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_mem_intercon ]
  set_property -dict [ list CONFIG.NUM_MI {1} CONFIG.NUM_SI {4}  ] $axi_mem_intercon

  # Create instance: axi_quad_spi_0, and set properties
  set axi_quad_spi_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_quad_spi:3.2 axi_quad_spi_0 ]
  set_property -dict [ list CONFIG.C_FIFO_DEPTH {256} CONFIG.C_SPI_MEMORY {3} CONFIG.C_SPI_MODE {2} CONFIG.C_TYPE_OF_AXI4_INTERFACE {0}  ] $axi_quad_spi_0

  # Create instance: axi_timer_0, and set properties
  set axi_timer_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_timer:2.0 axi_timer_0 ]

  # Create instance: axi_uart16550_0, and set properties
  set axi_uart16550_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_uart16550:2.0 axi_uart16550_0 ]

  # Create instance: clk_wiz_0, and set properties
  set clk_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:5.1 clk_wiz_0 ]
  set_property -dict [ list CONFIG.CLKOUT1_JITTER {110.904} CONFIG.CLKOUT1_PHASE_ERROR {87.466} CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {125.000} CONFIG.CLKOUT2_JITTER {113.974} CONFIG.CLKOUT2_PHASE_ERROR {87.466} CONFIG.CLKOUT2_REQUESTED_OUT_FREQ {108} CONFIG.CLKOUT2_USED {true} CONFIG.NUM_OUT_CLKS {2} CONFIG.RESET_TYPE {ACTIVE_LOW}  ] $clk_wiz_0

  # Create instance: d_axi_i2s_audio_0, and set properties
  set d_axi_i2s_audio_0 [ create_bd_cell -type ip -vlnv digilentinc.com:user:d_axi_i2s_audio:2.0 d_axi_i2s_audio_0 ]
  set_property -dict [ list CONFIG.ENABLE_STREAM {true}  ] $d_axi_i2s_audio_0

  # Create instance: d_sd_demo_0, and set properties
  set d_sd_demo_0 [ create_bd_cell -type ip -vlnv digilentinc.com:user:d_sd_demo:1.0 d_sd_demo_0 ]

  # Create instance: dpti_basic_sync_performance_test_0, and set properties
  set dpti_basic_sync_performance_test_0 [ create_bd_cell -type ip -vlnv digilentinc.com:user:dpti_basic_sync_performance_test:1.0 dpti_basic_sync_performance_test_0 ]

  # Create instance: intc_concat, and set properties
  set intc_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 intc_concat ]
  set_property -dict [ list CONFIG.NUM_PORTS {15}  ] $intc_concat

  # Create instance: mdm_1, and set properties
  set mdm_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:mdm:3.2 mdm_1 ]

  # Create instance: microblaze_0, and set properties
  set microblaze_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:microblaze:9.4 microblaze_0 ]
  set_property -dict [ list CONFIG.C_CACHE_BYTE_SIZE {8192} CONFIG.C_DCACHE_BYTE_SIZE {8192} CONFIG.C_DCACHE_LINE_LEN {8} CONFIG.C_DEBUG_ENABLED {1} CONFIG.C_D_AXI {1} CONFIG.C_D_LMB {1} CONFIG.C_I_LMB {1} CONFIG.C_USE_DCACHE {1} CONFIG.C_USE_DIV {1} CONFIG.C_USE_FPU {1} CONFIG.C_USE_ICACHE {1} CONFIG.G_TEMPLATE_LIST {6}  ] $microblaze_0

  # Create instance: microblaze_0_axi_intc, and set properties
  set microblaze_0_axi_intc [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_intc:4.1 microblaze_0_axi_intc ]
  set_property -dict [ list CONFIG.C_HAS_FAST {1}  ] $microblaze_0_axi_intc

  # Create instance: microblaze_0_axi_periph, and set properties
  set microblaze_0_axi_periph [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 microblaze_0_axi_periph ]
  set_property -dict [ list CONFIG.NUM_MI {21}  ] $microblaze_0_axi_periph

  # Create instance: microblaze_0_local_memory
  create_hier_cell_microblaze_0_local_memory [current_bd_instance .] microblaze_0_local_memory

  # Create instance: mig_7series_0, and set properties
  set mig_7series_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:mig_7series:2.2 mig_7series_0 ]

  # Generate the PRJ File for MIG
  set str_mig_folder [get_property IP_DIR [ get_ips [ get_property CONFIG.Component_Name $mig_7series_0 ] ] ]
  set str_mig_file_name mig_b.prj
  set str_mig_file_path ${str_mig_folder}/${str_mig_file_name}

  write_mig_file_system_mig_7series_0_0 $str_mig_file_path

  set_property -dict [ list CONFIG.BOARD_MIG_PARAM {Custom} CONFIG.RESET_BOARD_INTERFACE {Custom} CONFIG.XML_INPUT_FILE {mig_b.prj}  ] $mig_7series_0

  # Create instance: oled
  create_hier_cell_oled [current_bd_instance .] oled

  # Create instance: pmod_gpio, and set properties
  set pmod_gpio [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 pmod_gpio ]
  set_property -dict [ list CONFIG.C_GPIO2_WIDTH {16} CONFIG.C_GPIO_WIDTH {16} CONFIG.C_IS_DUAL {1}  ] $pmod_gpio

  # Create instance: rst_mig_7series_0_100M, and set properties
  set rst_mig_7series_0_100M [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 rst_mig_7series_0_100M ]

  # Create instance: sd_gpio, and set properties
  set sd_gpio [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 sd_gpio ]
  set_property -dict [ list CONFIG.C_ALL_INPUTS {1} CONFIG.C_GPIO_WIDTH {1}  ] $sd_gpio

  # Create instance: userio, and set properties
  set userio [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 userio ]
  set_property -dict [ list CONFIG.C_ALL_INPUTS {1} CONFIG.C_ALL_INPUTS_2 {0} CONFIG.C_ALL_OUTPUTS_2 {1} CONFIG.C_GPIO2_WIDTH {8} CONFIG.C_GPIO_WIDTH {13} CONFIG.C_INTERRUPT_PRESENT {1} CONFIG.C_IS_DUAL {1}  ] $userio

  # Create instance: video
  create_hier_cell_video [current_bd_instance .] video

  # Create instance: xadc_wiz_0, and set properties
  set xadc_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xadc_wiz:3.0 xadc_wiz_0 ]
  set_property -dict [ list CONFIG.AVERAGE_ENABLE_TEMPERATURE {true} CONFIG.AVERAGE_ENABLE_VP_VN {false} CONFIG.CHANNEL_ENABLE_VCCAUX {true} CONFIG.CHANNEL_ENABLE_VCCINT {true} CONFIG.CHANNEL_ENABLE_VP_VN {true} CONFIG.CHANNEL_ENABLE_VREFN {true} CONFIG.CHANNEL_ENABLE_VREFP {true} CONFIG.ENABLE_TEMP_BUS {true} CONFIG.OT_ALARM {false} CONFIG.SEQUENCER_MODE {Continuous} CONFIG.SINGLE_CHANNEL_SELECTION {TEMPERATURE} CONFIG.USER_TEMP_ALARM {true} CONFIG.VCCAUX_ALARM {true} CONFIG.VCCINT_ALARM {true} CONFIG.XADC_STARUP_SELECTION {channel_sequencer}  ] $xadc_wiz_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list CONFIG.IN0_WIDTH {8} CONFIG.IN1_WIDTH {1} CONFIG.NUM_PORTS {6}  ] $xlconcat_0

  # Create instance: zero, and set properties
  set zero [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 zero ]
  set_property -dict [ list CONFIG.CONST_VAL {0}  ] $zero

  # Create interface connections
  connect_bd_intf_net -intf_net TMDS_1 [get_bd_intf_ports hdmi_rx] [get_bd_intf_pins video/TMDS_IN]
  connect_bd_intf_net -intf_net axi_dma_0_M_AXIS_MM2S [get_bd_intf_pins axi_dma_0/M_AXIS_MM2S] [get_bd_intf_pins d_axi_i2s_audio_0/AXI_MM2S]
  connect_bd_intf_net -intf_net axi_dma_0_M_AXI_MM2S [get_bd_intf_pins axi_dma_0/M_AXI_MM2S] [get_bd_intf_pins axi_mem_intercon/S02_AXI]
  connect_bd_intf_net -intf_net axi_dma_0_M_AXI_S2MM [get_bd_intf_pins axi_dma_0/M_AXI_S2MM] [get_bd_intf_pins axi_mem_intercon/S03_AXI]
  connect_bd_intf_net -intf_net axi_ethernet_0_fifo_AXI_STR_TXC [get_bd_intf_pins axi_ethernet_0/s_axis_txc] [get_bd_intf_pins axi_ethernet_0_fifo/AXI_STR_TXC]
  connect_bd_intf_net -intf_net axi_ethernet_0_fifo_AXI_STR_TXD [get_bd_intf_pins axi_ethernet_0/s_axis_txd] [get_bd_intf_pins axi_ethernet_0_fifo/AXI_STR_TXD]
  connect_bd_intf_net -intf_net axi_ethernet_0_m_axis_rxd [get_bd_intf_pins axi_ethernet_0/m_axis_rxd] [get_bd_intf_pins axi_ethernet_0_fifo/AXI_STR_RXD]
  connect_bd_intf_net -intf_net axi_ethernet_0_mdio_io [get_bd_intf_ports ETHM] [get_bd_intf_pins axi_ethernet_0/mdio_io]
  connect_bd_intf_net -intf_net axi_ethernet_0_rgmii [get_bd_intf_ports ETH] [get_bd_intf_pins axi_ethernet_0/rgmii]
  connect_bd_intf_net -intf_net axi_gpio_0_GPIO [get_bd_intf_ports gpio_rtl] [get_bd_intf_pins pmod_gpio/GPIO]
  connect_bd_intf_net -intf_net axi_gpio_0_GPIO2 [get_bd_intf_ports gpio_rtl_0] [get_bd_intf_pins pmod_gpio/GPIO2]
  connect_bd_intf_net -intf_net axi_iic_0_IIC [get_bd_intf_ports iic] [get_bd_intf_pins axi_iic_0/IIC]
  connect_bd_intf_net -intf_net axi_mem_intercon_M00_AXI [get_bd_intf_pins axi_mem_intercon/M00_AXI] [get_bd_intf_pins mig_7series_0/S_AXI]
  connect_bd_intf_net -intf_net axi_quad_spi_0_SPI_0 [get_bd_intf_ports qspi] [get_bd_intf_pins axi_quad_spi_0/SPI_0]
  connect_bd_intf_net -intf_net d_axi_i2s_audio_0_AXI_S2MM [get_bd_intf_pins axi_dma_0/S_AXIS_S2MM] [get_bd_intf_pins d_axi_i2s_audio_0/AXI_S2MM]
  connect_bd_intf_net -intf_net d_sd_demo_0_sd_cmd [get_bd_intf_ports sd_cmd] [get_bd_intf_pins d_sd_demo_0/sd_cmd]
  connect_bd_intf_net -intf_net dvi2rgb_0_DDC [get_bd_intf_ports hdmi_rx_ddc] [get_bd_intf_pins video/DDC]
  connect_bd_intf_net -intf_net microblaze_0_M_AXI_DC [get_bd_intf_pins axi_mem_intercon/S00_AXI] [get_bd_intf_pins microblaze_0/M_AXI_DC]
  connect_bd_intf_net -intf_net microblaze_0_M_AXI_IC [get_bd_intf_pins axi_mem_intercon/S01_AXI] [get_bd_intf_pins microblaze_0/M_AXI_IC]
  connect_bd_intf_net -intf_net microblaze_0_axi_dp [get_bd_intf_pins microblaze_0/M_AXI_DP] [get_bd_intf_pins microblaze_0_axi_periph/S00_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M01_AXI [get_bd_intf_pins axi_uart16550_0/S_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M01_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M02_AXI [get_bd_intf_pins axi_timer_0/S_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M02_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M03_AXI [get_bd_intf_pins microblaze_0_axi_periph/M03_AXI] [get_bd_intf_pins oled/AXI_LITE]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M04_AXI [get_bd_intf_pins microblaze_0_axi_periph/M04_AXI] [get_bd_intf_pins userio/S_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M05_AXI [get_bd_intf_pins microblaze_0_axi_periph/M05_AXI] [get_bd_intf_pins oled/S_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M06_AXI [get_bd_intf_pins axi_ethernet_0/s_axi] [get_bd_intf_pins microblaze_0_axi_periph/M06_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M07_AXI [get_bd_intf_pins axi_ethernet_0_fifo/S_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M07_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M08_AXI [get_bd_intf_pins microblaze_0_axi_periph/M08_AXI] [get_bd_intf_pins pmod_gpio/S_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M09_AXI [get_bd_intf_pins microblaze_0_axi_periph/M09_AXI] [get_bd_intf_pins xadc_wiz_0/s_axi_lite]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M10_AXI [get_bd_intf_pins axi_quad_spi_0/AXI_LITE] [get_bd_intf_pins microblaze_0_axi_periph/M10_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M11_AXI [get_bd_intf_pins d_sd_demo_0/S00_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M11_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M12_AXI [get_bd_intf_pins microblaze_0_axi_periph/M12_AXI] [get_bd_intf_pins sd_gpio/S_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M13_AXI [get_bd_intf_pins d_axi_i2s_audio_0/AXI_L] [get_bd_intf_pins microblaze_0_axi_periph/M13_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M14_AXI [get_bd_intf_pins microblaze_0_axi_periph/M14_AXI] [get_bd_intf_pins video/DP_TX_S_AXILITE]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M15_AXI [get_bd_intf_pins axi_iic_0/S_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M15_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M16_AXI [get_bd_intf_pins microblaze_0_axi_periph/M16_AXI] [get_bd_intf_pins video/ctrl2]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M17_AXI [get_bd_intf_pins microblaze_0_axi_periph/M17_AXI] [get_bd_intf_pins video/ctrl]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M18_AXI [get_bd_intf_pins microblaze_0_axi_periph/M18_AXI] [get_bd_intf_pins video/S_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M19_AXI [get_bd_intf_pins microblaze_0_axi_periph/M19_AXI] [get_bd_intf_pins video/ctrl1]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M20_AXI [get_bd_intf_pins axi_dma_0/S_AXI_LITE] [get_bd_intf_pins microblaze_0_axi_periph/M20_AXI]
  connect_bd_intf_net -intf_net microblaze_0_debug [get_bd_intf_pins mdm_1/MBDEBUG_0] [get_bd_intf_pins microblaze_0/DEBUG]
  connect_bd_intf_net -intf_net microblaze_0_dlmb_1 [get_bd_intf_pins microblaze_0/DLMB] [get_bd_intf_pins microblaze_0_local_memory/DLMB]
  connect_bd_intf_net -intf_net microblaze_0_ilmb_1 [get_bd_intf_pins microblaze_0/ILMB] [get_bd_intf_pins microblaze_0_local_memory/ILMB]
  connect_bd_intf_net -intf_net microblaze_0_intc_axi [get_bd_intf_pins microblaze_0_axi_intc/s_axi] [get_bd_intf_pins microblaze_0_axi_periph/M00_AXI]
  connect_bd_intf_net -intf_net microblaze_0_interrupt [get_bd_intf_pins microblaze_0/INTERRUPT] [get_bd_intf_pins microblaze_0_axi_intc/interrupt]
  connect_bd_intf_net -intf_net mig_7series_0_DDR3 [get_bd_intf_ports DDR3] [get_bd_intf_pins mig_7series_0/DDR3]
  connect_bd_intf_net -intf_net rgb2dvi_0_TMDS [get_bd_intf_ports hdmi_tx] [get_bd_intf_pins video/TMDS_OUT]
  connect_bd_intf_net -intf_net sd_gpio_GPIO [get_bd_intf_ports sd_cd] [get_bd_intf_pins sd_gpio/GPIO]
  connect_bd_intf_net -intf_net userio_GPIO2 [get_bd_intf_ports led] [get_bd_intf_pins userio/GPIO2]

  # Create port connections
  connect_bd_net -net DPTI_FTCLK_1 [get_bd_ports DPTI_FTCLK] [get_bd_pins dpti_basic_sync_performance_test_0/DPTI_FTCLK]
  connect_bd_net -net DPTI_JTAGEN_1 [get_bd_ports DPTI_JTAGEN] [get_bd_pins dpti_basic_sync_performance_test_0/DPTI_JTAGEN]
  connect_bd_net -net DPTI_RXF_1 [get_bd_ports DPTI_RXF] [get_bd_pins dpti_basic_sync_performance_test_0/DPTI_RXF]
  connect_bd_net -net DPTI_TXE_1 [get_bd_ports DPTI_TXE] [get_bd_pins dpti_basic_sync_performance_test_0/DPTI_TXE]
  connect_bd_net -net ETH_INT_B_1 [get_bd_ports ETH_INT_B] [get_bd_pins intc_concat/In4]
  connect_bd_net -net In0_1 [get_bd_ports sw] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net IntPixelClk_1 [get_bd_pins clk_wiz_0/clk_out2] [get_bd_pins video/IntPixelClk]
  connect_bd_net -net Net [get_bd_ports DPTI_PDB] [get_bd_pins dpti_basic_sync_performance_test_0/DPTI_PDB]
  connect_bd_net -net Net1 [get_bd_ports PS2_Clk] [get_bd_pins video/PS2_Clk]
  connect_bd_net -net Net2 [get_bd_ports PS2_Data] [get_bd_pins video/PS2_Data]
  connect_bd_net -net SDATA_I_1 [get_bd_ports AC_ADC_SDATA] [get_bd_pins d_axi_i2s_audio_0/SDATA_I]
  connect_bd_net -net SwitchesButtons_ip2intc_irpt [get_bd_pins intc_concat/In10] [get_bd_pins userio/ip2intc_irpt]
  connect_bd_net -net aux_reset_in_1 [get_bd_ports CPU_RESETN] [get_bd_pins rst_mig_7series_0_100M/aux_reset_in]
  connect_bd_net -net aux_tx_channel_in_n_1 [get_bd_ports DP_AUX_IN_N] [get_bd_pins video/DP_TX_AUX_IN_N]
  connect_bd_net -net aux_tx_channel_in_p_1 [get_bd_ports DP_AUX_IN_P] [get_bd_pins video/DP_TX_AUX_IN_P]
  connect_bd_net -net axi_dma_0_mm2s_introut [get_bd_pins axi_dma_0/mm2s_introut] [get_bd_pins intc_concat/In13]
  connect_bd_net -net axi_dma_0_s2mm_introut [get_bd_pins axi_dma_0/s2mm_introut] [get_bd_pins intc_concat/In14]
  connect_bd_net -net axi_ethernet_0_fifo_interrupt [get_bd_pins axi_ethernet_0_fifo/interrupt] [get_bd_pins intc_concat/In2]
  connect_bd_net -net axi_ethernet_0_fifo_mm2s_cntrl_reset_out_n [get_bd_pins axi_ethernet_0/axi_txc_arstn] [get_bd_pins axi_ethernet_0_fifo/mm2s_cntrl_reset_out_n]
  connect_bd_net -net axi_ethernet_0_fifo_mm2s_prmry_reset_out_n [get_bd_pins axi_ethernet_0/axi_txd_arstn] [get_bd_pins axi_ethernet_0_fifo/mm2s_prmry_reset_out_n]
  connect_bd_net -net axi_ethernet_0_fifo_s2mm_prmry_reset_out_n [get_bd_pins axi_ethernet_0/axi_rxd_arstn] [get_bd_pins axi_ethernet_0/axi_rxs_arstn] [get_bd_pins axi_ethernet_0_fifo/s2mm_prmry_reset_out_n]
  connect_bd_net -net axi_ethernet_0_interrupt [get_bd_pins axi_ethernet_0/interrupt] [get_bd_pins intc_concat/In3]
  connect_bd_net -net axi_ethernet_0_phy_rst_n [get_bd_ports ETH_RST_B] [get_bd_pins axi_ethernet_0/phy_rst_n]
  connect_bd_net -net axi_iic_0_iic2intc_irpt [get_bd_pins axi_iic_0/iic2intc_irpt] [get_bd_pins intc_concat/In9]
  connect_bd_net -net axi_quad_spi_0_ip2intc_irpt [get_bd_pins axi_quad_spi_0/ip2intc_irpt] [get_bd_pins intc_concat/In5]
  connect_bd_net -net axi_timer_0_interrupt [get_bd_pins axi_timer_0/interrupt] [get_bd_pins intc_concat/In0]
  connect_bd_net -net axi_uart16550_0_ip2intc_irpt [get_bd_pins axi_uart16550_0/ip2intc_irpt] [get_bd_pins intc_concat/In1]
  connect_bd_net -net axi_uart16550_0_sout [get_bd_ports UART_RX_OUT] [get_bd_pins axi_uart16550_0/sout]
  connect_bd_net -net btnc_1 [get_bd_ports btnc] [get_bd_pins xlconcat_0/In5]
  connect_bd_net -net btnd_1 [get_bd_ports btnd] [get_bd_pins xlconcat_0/In3]
  connect_bd_net -net btnl_1 [get_bd_ports btnl] [get_bd_pins xlconcat_0/In4]
  connect_bd_net -net btnr_1 [get_bd_ports btnr] [get_bd_pins xlconcat_0/In2]
  connect_bd_net -net btnu_1 [get_bd_ports btnu] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net clk_wiz_0_clk_out1 [get_bd_pins axi_ethernet_0/gtx_clk] [get_bd_pins clk_wiz_0/clk_out1]
  connect_bd_net -net clk_wiz_0_locked [get_bd_pins clk_wiz_0/locked] [get_bd_pins rst_mig_7series_0_100M/dcm_locked]
  connect_bd_net -net d_axi_i2s_audio_0_BCLK_O [get_bd_ports AC_BCLK] [get_bd_pins d_axi_i2s_audio_0/BCLK_O]
  connect_bd_net -net d_axi_i2s_audio_0_LRCLK_O [get_bd_ports AC_LRCLK] [get_bd_pins d_axi_i2s_audio_0/LRCLK_O]
  connect_bd_net -net d_axi_i2s_audio_0_MCLK_O [get_bd_ports AC_MCLK] [get_bd_pins d_axi_i2s_audio_0/MCLK_O]
  connect_bd_net -net d_axi_i2s_audio_0_SDATA_O [get_bd_ports AC_DAC_SDATA] [get_bd_pins d_axi_i2s_audio_0/SDATA_O]
  connect_bd_net -net d_sd_demo_0_sd_sck_o [get_bd_ports sd_sck_o] [get_bd_pins d_sd_demo_0/sd_sck_o]
  connect_bd_net -net displayport_0_aux_tx_channel_out_n [get_bd_ports DP_AUX_OUT_N] [get_bd_pins video/DP_TX_AUX_OUT_N]
  connect_bd_net -net displayport_0_aux_tx_channel_out_p [get_bd_ports DP_AUX_OUT_P] [get_bd_pins video/DP_TX_AUX_OUT_P]
  connect_bd_net -net displayport_0_lnk_tx_lane_n [get_bd_ports DP_TX_LANE_N] [get_bd_pins video/DP_TX_LANE_N]
  connect_bd_net -net displayport_0_lnk_tx_lane_p [get_bd_ports DP_TX_LANE_P] [get_bd_pins video/DP_TX_LANE_P]
  connect_bd_net -net dpti_basic_sync_performance_test_0_DPTI_OE [get_bd_ports DPTI_OE] [get_bd_pins dpti_basic_sync_performance_test_0/DPTI_OE]
  connect_bd_net -net dpti_basic_sync_performance_test_0_DPTI_RD [get_bd_ports DPTI_RD] [get_bd_pins dpti_basic_sync_performance_test_0/DPTI_RD]
  connect_bd_net -net dpti_basic_sync_performance_test_0_DPTI_SIWU [get_bd_ports DPTI_SIWU] [get_bd_pins dpti_basic_sync_performance_test_0/DPTI_SIWU]
  connect_bd_net -net dpti_basic_sync_performance_test_0_DPTI_WR [get_bd_ports DPTI_WR] [get_bd_pins dpti_basic_sync_performance_test_0/DPTI_WR]
  connect_bd_net -net lnk_clk_n_1 [get_bd_ports DP_LNK_CLK_N] [get_bd_pins video/DP_TX_LNK_CLK_N]
  connect_bd_net -net lnk_clk_p_1 [get_bd_ports DP_LNK_CLK_P] [get_bd_pins video/DP_TX_LNK_CLK_P]
  connect_bd_net -net mdm_1_debug_sys_rst [get_bd_pins mdm_1/Debug_SYS_Rst] [get_bd_pins rst_mig_7series_0_100M/mb_debug_sys_rst]
  connect_bd_net -net microblaze_0_Clk [get_bd_pins axi_dma_0/m_axi_mm2s_aclk] [get_bd_pins axi_dma_0/m_axi_s2mm_aclk] [get_bd_pins axi_dma_0/s_axi_lite_aclk] [get_bd_pins axi_ethernet_0/axis_clk] [get_bd_pins axi_ethernet_0/s_axi_lite_clk] [get_bd_pins axi_ethernet_0_fifo/s_axi_aclk] [get_bd_pins axi_iic_0/s_axi_aclk] [get_bd_pins axi_mem_intercon/ACLK] [get_bd_pins axi_mem_intercon/M00_ACLK] [get_bd_pins axi_mem_intercon/S00_ACLK] [get_bd_pins axi_mem_intercon/S01_ACLK] [get_bd_pins axi_mem_intercon/S02_ACLK] [get_bd_pins axi_mem_intercon/S03_ACLK] [get_bd_pins axi_quad_spi_0/ext_spi_clk] [get_bd_pins axi_quad_spi_0/s_axi_aclk] [get_bd_pins axi_timer_0/s_axi_aclk] [get_bd_pins axi_uart16550_0/s_axi_aclk] [get_bd_pins d_axi_i2s_audio_0/AXI_L_aclk] [get_bd_pins d_axi_i2s_audio_0/CLK_100MHZ_I] [get_bd_pins d_axi_i2s_audio_0/M_AXIS_S2MM_ACLK] [get_bd_pins d_axi_i2s_audio_0/S_AXIS_MM2S_ACLK] [get_bd_pins d_sd_demo_0/s00_axi_aclk] [get_bd_pins microblaze_0/Clk] [get_bd_pins microblaze_0_axi_intc/processor_clk] [get_bd_pins microblaze_0_axi_intc/s_axi_aclk] [get_bd_pins microblaze_0_axi_periph/ACLK] [get_bd_pins microblaze_0_axi_periph/M00_ACLK] [get_bd_pins microblaze_0_axi_periph/M01_ACLK] [get_bd_pins microblaze_0_axi_periph/M02_ACLK] [get_bd_pins microblaze_0_axi_periph/M03_ACLK] [get_bd_pins microblaze_0_axi_periph/M04_ACLK] [get_bd_pins microblaze_0_axi_periph/M05_ACLK] [get_bd_pins microblaze_0_axi_periph/M06_ACLK] [get_bd_pins microblaze_0_axi_periph/M07_ACLK] [get_bd_pins microblaze_0_axi_periph/M08_ACLK] [get_bd_pins microblaze_0_axi_periph/M09_ACLK] [get_bd_pins microblaze_0_axi_periph/M10_ACLK] [get_bd_pins microblaze_0_axi_periph/M11_ACLK] [get_bd_pins microblaze_0_axi_periph/M12_ACLK] [get_bd_pins microblaze_0_axi_periph/M13_ACLK] [get_bd_pins microblaze_0_axi_periph/M14_ACLK] [get_bd_pins microblaze_0_axi_periph/M15_ACLK] [get_bd_pins microblaze_0_axi_periph/M16_ACLK] [get_bd_pins microblaze_0_axi_periph/M17_ACLK] [get_bd_pins microblaze_0_axi_periph/M18_ACLK] [get_bd_pins microblaze_0_axi_periph/M19_ACLK] [get_bd_pins microblaze_0_axi_periph/M20_ACLK] [get_bd_pins microblaze_0_axi_periph/S00_ACLK] [get_bd_pins microblaze_0_local_memory/LMB_Clk] [get_bd_pins mig_7series_0/ui_clk] [get_bd_pins oled/s_axi_aclk] [get_bd_pins pmod_gpio/s_axi_aclk] [get_bd_pins rst_mig_7series_0_100M/slowest_sync_clk] [get_bd_pins sd_gpio/s_axi_aclk] [get_bd_pins userio/s_axi_aclk] [get_bd_pins video/S_AXI_ACLK] [get_bd_pins xadc_wiz_0/s_axi_aclk]
  connect_bd_net -net microblaze_0_intr [get_bd_pins intc_concat/dout] [get_bd_pins microblaze_0_axi_intc/intr]
  connect_bd_net -net mig_7series_0_mmcm_locked [get_bd_ports hdmi_rx_hpa] [get_bd_ports hdmi_rx_txen] [get_bd_pins clk_wiz_0/resetn] [get_bd_pins mig_7series_0/mmcm_locked]
  connect_bd_net -net mig_7series_0_ui_addn_clk_0 [get_bd_pins axi_ethernet_0/ref_clk] [get_bd_pins clk_wiz_0/clk_in1] [get_bd_pins mig_7series_0/clk_ref_i] [get_bd_pins mig_7series_0/ui_addn_clk_1] [get_bd_pins video/REF_CLK_200MHZ]
  connect_bd_net -net mig_7series_0_ui_clk_sync_rst [get_bd_pins mig_7series_0/ui_clk_sync_rst] [get_bd_pins rst_mig_7series_0_100M/ext_reset_in]
  connect_bd_net -net oled_gpio_io_o [get_bd_ports oled_gpio] [get_bd_pins oled/GPIO]
  connect_bd_net -net oled_io0_o [get_bd_ports oled_sdin] [get_bd_pins oled/io0_o]
  connect_bd_net -net oled_ip2intc_irpt [get_bd_pins intc_concat/In12] [get_bd_pins oled/ip2intc_irpt]
  connect_bd_net -net oled_sck_o [get_bd_ports oled_sclk] [get_bd_pins oled/sck_o]
  connect_bd_net -net rst_mig_7series_0_100M_bus_struct_reset [get_bd_pins microblaze_0_local_memory/LMB_Rst] [get_bd_pins rst_mig_7series_0_100M/bus_struct_reset]
  connect_bd_net -net rst_mig_7series_0_100M_interconnect_aresetn [get_bd_pins axi_mem_intercon/ARESETN] [get_bd_pins microblaze_0_axi_periph/ARESETN] [get_bd_pins rst_mig_7series_0_100M/interconnect_aresetn]
  connect_bd_net -net rst_mig_7series_0_100M_mb_reset [get_bd_pins microblaze_0/Reset] [get_bd_pins microblaze_0_axi_intc/processor_rst] [get_bd_pins rst_mig_7series_0_100M/mb_reset]
  connect_bd_net -net rst_mig_7series_0_100M_peripheral_aresetn [get_bd_pins axi_dma_0/axi_resetn] [get_bd_pins axi_ethernet_0/s_axi_lite_resetn] [get_bd_pins axi_ethernet_0_fifo/s_axi_aresetn] [get_bd_pins axi_iic_0/s_axi_aresetn] [get_bd_pins axi_mem_intercon/M00_ARESETN] [get_bd_pins axi_mem_intercon/S00_ARESETN] [get_bd_pins axi_mem_intercon/S01_ARESETN] [get_bd_pins axi_mem_intercon/S02_ARESETN] [get_bd_pins axi_mem_intercon/S03_ARESETN] [get_bd_pins axi_quad_spi_0/s_axi_aresetn] [get_bd_pins axi_timer_0/s_axi_aresetn] [get_bd_pins axi_uart16550_0/s_axi_aresetn] [get_bd_pins d_axi_i2s_audio_0/AXI_L_aresetn] [get_bd_pins d_axi_i2s_audio_0/M_AXIS_S2MM_ARESETN] [get_bd_pins d_axi_i2s_audio_0/S_AXIS_MM2S_ARESETN] [get_bd_pins d_sd_demo_0/s00_axi_aresetn] [get_bd_pins microblaze_0_axi_intc/s_axi_aresetn] [get_bd_pins microblaze_0_axi_periph/M00_ARESETN] [get_bd_pins microblaze_0_axi_periph/M01_ARESETN] [get_bd_pins microblaze_0_axi_periph/M02_ARESETN] [get_bd_pins microblaze_0_axi_periph/M03_ARESETN] [get_bd_pins microblaze_0_axi_periph/M04_ARESETN] [get_bd_pins microblaze_0_axi_periph/M05_ARESETN] [get_bd_pins microblaze_0_axi_periph/M06_ARESETN] [get_bd_pins microblaze_0_axi_periph/M07_ARESETN] [get_bd_pins microblaze_0_axi_periph/M08_ARESETN] [get_bd_pins microblaze_0_axi_periph/M09_ARESETN] [get_bd_pins microblaze_0_axi_periph/M10_ARESETN] [get_bd_pins microblaze_0_axi_periph/M11_ARESETN] [get_bd_pins microblaze_0_axi_periph/M12_ARESETN] [get_bd_pins microblaze_0_axi_periph/M13_ARESETN] [get_bd_pins microblaze_0_axi_periph/M14_ARESETN] [get_bd_pins microblaze_0_axi_periph/M15_ARESETN] [get_bd_pins microblaze_0_axi_periph/M16_ARESETN] [get_bd_pins microblaze_0_axi_periph/M17_ARESETN] [get_bd_pins microblaze_0_axi_periph/M18_ARESETN] [get_bd_pins microblaze_0_axi_periph/M19_ARESETN] [get_bd_pins microblaze_0_axi_periph/M20_ARESETN] [get_bd_pins microblaze_0_axi_periph/S00_ARESETN] [get_bd_pins mig_7series_0/aresetn] [get_bd_pins oled/s_axi_aresetn] [get_bd_pins pmod_gpio/s_axi_aresetn] [get_bd_pins rst_mig_7series_0_100M/peripheral_aresetn] [get_bd_pins sd_gpio/s_axi_aresetn] [get_bd_pins userio/s_axi_aresetn] [get_bd_pins video/ARST_N] [get_bd_pins video/S_AXI_ARESET_N] [get_bd_pins xadc_wiz_0/s_axi_aresetn]
  connect_bd_net -net rx_1 [get_bd_ports UART_TX_IN] [get_bd_pins axi_uart16550_0/sin]
  connect_bd_net -net sd_dat0_i_1 [get_bd_ports sd_dat0_i] [get_bd_pins d_sd_demo_0/sd_dat0_i]
  connect_bd_net -net sd_dat1_i_1 [get_bd_ports sd_dat1_i] [get_bd_pins d_sd_demo_0/sd_dat1_i]
  connect_bd_net -net sd_dat2_i_1 [get_bd_ports sd_dat2_i] [get_bd_pins d_sd_demo_0/sd_dat2_i]
  connect_bd_net -net sd_dat3_i_1 [get_bd_ports sd_dat3_i] [get_bd_pins d_sd_demo_0/sd_dat3_i]
  connect_bd_net -net sys_clk_i_1 [get_bd_ports SYSCLK] [get_bd_pins mig_7series_0/sys_clk_i]
  connect_bd_net -net tx_hpd_1 [get_bd_ports DP_HPD] [get_bd_pins video/DP_TX_HPD]
  connect_bd_net -net video_axi_int [get_bd_pins intc_concat/In11] [get_bd_pins video/axi_int]
  connect_bd_net -net video_ip2intc_irpt [get_bd_pins intc_concat/In7] [get_bd_pins video/ip2intc_irpt]
  connect_bd_net -net video_irq [get_bd_pins intc_concat/In6] [get_bd_pins video/irq]
  connect_bd_net -net xadc_wiz_0_ip2intc_irpt [get_bd_pins intc_concat/In8] [get_bd_pins xadc_wiz_0/ip2intc_irpt]
  connect_bd_net -net xadc_wiz_0_temp_out [get_bd_pins mig_7series_0/device_temp_i] [get_bd_pins xadc_wiz_0/temp_out]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins userio/gpio_io_i] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconstant_0_dout [get_bd_ports sd_reset_o] [get_bd_pins mig_7series_0/sys_rst] [get_bd_pins zero/dout]

  # Create address segments
  create_bd_addr_seg -range 0x20000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_0/Data_MM2S] [get_bd_addr_segs mig_7series_0/memmap/memaddr] SEG_mig_7series_0_memaddr
  create_bd_addr_seg -range 0x20000000 -offset 0x80000000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs mig_7series_0/memmap/memaddr] SEG_mig_7series_0_memaddr
  create_bd_addr_seg -range 0x10000 -offset 0x40010000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs userio/S_AXI/Reg] SEG_Switches_Reg
  create_bd_addr_seg -range 0x10000 -offset 0x41E00000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_dma_0/S_AXI_LITE/Reg] SEG_axi_dma_0_Reg
  create_bd_addr_seg -range 0x40000 -offset 0x40C00000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_ethernet_0/s_axi/Reg] SEG_axi_ethernet_0_Reg
  create_bd_addr_seg -range 0x10000 -offset 0x44A00000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_ethernet_0_fifo/S_AXI/Mem0] SEG_axi_ethernet_0_fifo_Mem0
  create_bd_addr_seg -range 0x10000 -offset 0x40030000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs pmod_gpio/S_AXI/Reg] SEG_axi_gpio_0_Reg
  create_bd_addr_seg -range 0x10000 -offset 0x40000000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs oled/axi_gpio_0/S_AXI/Reg] SEG_axi_gpio_0_Reg1
  create_bd_addr_seg -range 0x10000 -offset 0x40800000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_iic_0/S_AXI/Reg] SEG_axi_iic_0_Reg
  create_bd_addr_seg -range 0x10000 -offset 0x44A20000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_quad_spi_0/AXI_LITE/Reg] SEG_axi_quad_spi_0_Reg
  create_bd_addr_seg -range 0x10000 -offset 0x44A90000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs oled/axi_quad_spi_0/AXI_LITE/Reg] SEG_axi_quad_spi_0_Reg1
  create_bd_addr_seg -range 0x10000 -offset 0x41C00000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_timer_0/S_AXI/Reg] SEG_axi_timer_0_Reg
  create_bd_addr_seg -range 0x10000 -offset 0x40400000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_uart16550_0/S_AXI/Reg] SEG_axi_uart16550_0_Reg
  create_bd_addr_seg -range 0x10000 -offset 0x44A40000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs d_axi_i2s_audio_0/AXI_L/AXI_L_reg] SEG_d_axi_i2s_audio_0_AXI_L_reg
  create_bd_addr_seg -range 0x10000 -offset 0x44A30000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs d_sd_demo_0/S00_AXI/S00_AXI_reg] SEG_d_sd_demo_0_S00_AXI_reg
  create_bd_addr_seg -range 0x10000 -offset 0x44A50000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs video/displayport_0/dp_s_axilite/Reg] SEG_displayport_0_Reg
  create_bd_addr_seg -range 0x20000 -offset 0x0 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs microblaze_0_local_memory/dlmb_bram_if_cntlr/SLMB/Mem] SEG_dlmb_bram_if_cntlr_Mem
  create_bd_addr_seg -range 0x20000 -offset 0x0 [get_bd_addr_spaces microblaze_0/Instruction] [get_bd_addr_segs microblaze_0_local_memory/ilmb_bram_if_cntlr/SLMB/Mem] SEG_ilmb_bram_if_cntlr_Mem
  create_bd_addr_seg -range 0x10000 -offset 0x41200000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs microblaze_0_axi_intc/s_axi/Reg] SEG_microblaze_0_axi_intc_Reg
  create_bd_addr_seg -range 0x20000000 -offset 0x80000000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs mig_7series_0/memmap/memaddr] SEG_mig_7series_0_memaddr
  create_bd_addr_seg -range 0x20000000 -offset 0x80000000 [get_bd_addr_spaces microblaze_0/Instruction] [get_bd_addr_segs mig_7series_0/memmap/memaddr] SEG_mig_7series_0_memaddr
  create_bd_addr_seg -range 0x10000 -offset 0x44A80000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs video/ps2_mouse_overlay_0/s00_axi/reg0] SEG_ps2_mouse_overlay_0_reg0
  create_bd_addr_seg -range 0x10000 -offset 0x40040000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs sd_gpio/S_AXI/Reg] SEG_sd_gpio_Reg
  create_bd_addr_seg -range 0x10000 -offset 0x44A60000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs video/v_tpg_0/ctrl/Reg] SEG_v_tpg_0_Reg
  create_bd_addr_seg -range 0x10000 -offset 0x40050000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs video/video_path_ctrl/S_AXI/Reg] SEG_video_path_ctrl_Reg
  create_bd_addr_seg -range 0x10000 -offset 0x44A70000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs video/vtd/ctrl/Reg] SEG_vtd_Reg
  create_bd_addr_seg -range 0x10000 -offset 0x44A10000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs xadc_wiz_0/s_axi_lite/Reg] SEG_xadc_wiz_0_Reg
  

  # Restore current instance
  current_bd_instance $oldCurInst

  save_bd_design
}
# End of create_root_design()


##################################################################
# MAIN FLOW
##################################################################

create_root_design ""


